@font-face {
  font-family: nos;
  src: url(../fonts/classica_3/Classica-Book.ttf);
}
@font-face {
  font-family: elecstrom;
  src: url(../fonts/elecstrom-font/ElecstromRegular-w1y4P.ttf);
}

:root {
  --corFundo: rgb(0, 60, 68);
  --space1: 1vh;
  --space2: 2vh;
  --space3: 3vh;
  --space4: 4vh;
  --space5: 9vh;
  --maxFontSize1: 5vh
}

/* Paterns */

* {
  color: rgba(245, 245, 245, 0.2);
  text-align: center;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
a {
  text-decoration: none;
}
p {
  padding: 0;
  margin: 0;
}

.displayFlex {
  display: flex;
  justify-content: space-between;
}

.flexIten {
  flex: 1;
}

.flexRow {
  flex-direction: row;
} 

.marginZero {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

.titleStyle {
  font-family: elecstrom;
  };

/* Elements */

html {
  overflow-y:hidden;
  overflow-x:hidden;
}

.fundo {
  background-color: var(--corFundo);
  background-image: url(../images/backgrounds/parede-texturizada-de-concreto-verde-solido.jpg);
  background-size: cover;
  width: 94vh;
  height: 94vh;
  margin: 0 auto;
}

.headerSet {
  width: 100%;
  margin: 1vh auto;
  justify-content: center;
  align-items: center;
}

.navSet {
  height: 100%;
  width: 100%;
  justify-content: space-around;
  padding: 0.5vh;;
}

.navIten { 
  margin: 0 1vh;
}

#playerNameSpan, #playerLuckSpan, #playerMoneySpan {
  font-size: 2.5vh;
}

#rightStatusDiv {
  max-width: 44vh;
}

#moneyDiv, #previousStatusDiv {
  margin: auto;
  justify-content: center;
  width: 100%;
  overflow: hidden;
  font-size: 7vh;
  text-align: center;
  margin: auto;
  white-space: nowrap
}

#previousStatusDiv {
  font-size: 3.5vh;
}

#numberFraction,
#numberPercentual {
  font-size: 7vh;
  max-width: 100%;
  max-height: 100%;
  text-align: center;
  margin: auto;
}

#divisorFraction, #luckWord {
  font-size: 3.5vh;
  max-width: 100%;
  max-height: 100%;
  text-align: center;
  margin: auto;
}

#previousStatusDivChild {
  animation: previousStatusDivChildSlide 10s linear 0s infinite;
}


.status {
  justify-content: space-around;
}

.status div {
  flex: 1;
  margin: var(--space1);
  flex-direction: row;
  flex-wrap: nowrap;
}

.checkPoint{
  height: 1vh;
}

.table1 {
  padding: var(--space1);
  font-family: nos;
}

.table1 .flexItem {
  flex-direction: column;
}

.table1 .display {
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-between;
  margin:  2vh 2vh;
}

.table1 .display div {
  flex: 1;
  min-width: 0.5vh;
  min-height: 0.5vh;
  border-radius: 1vh;
  margin: 0.2vh;
}

#containerCards {
  perspective: 25cm;
  flex-direction: row;
  margin: 1vh;
}

#containerCards div {
  margin: var(--space2);
  padding: var(--space3);
}

#containerCards div img {
  width: 100%;
  display: block;
}

  .matchInformationDiv {
    margin-bottom: 5vh;
  }
  
  #matchPrompt {
    position: absolute;
    left: calc(50% - 25vh);
    top: 10vh;
    width: 50vh;
    z-index: 5;
    font-size: 4vh;
    padding: 2.5vh 5vh 5vh;
    flex-direction: column;
    font-family: nos;
  }

  .promptButton {
    margin-top: 2.5vh;
    font-size: 3vh;
    padding: 1vh;
  }

.matchPromptInput {
  text-shadow: 0 0 2vh rgba(122, 255, 222), 0 0 3vh rgb(0, 136, 102), 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  color: rgba(122, 255, 222);
}

#matchPromptInformation {
  margin-top: 5vh;
}

/* 
.matchPromptInputPlaceHolder::placeholder {
  text-shadow: 0 0 2vh blue, 0 0 3vh darkblue, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
  color: rgb(196, 212, 255);
};
 */
/* Light Efects */
.shadowText {
  text-shadow: 0 0 2vh blue, 0 0 3vh darkblue, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
  color: rgb(196, 212, 255);
}
.shadowTextEfect {
  animation: shadowTextEfect 2s ease 0.5s;
  animation-fill-mode: forwards;
}

.glass {
  background-image: linear-gradient(315deg, hsla(182, 100%, 50%, 0.05), hsla(0, 0%, 0%, 0.25));
  border-radius: var(--space2);
  box-shadow: 3vh 3vh 3vh hsl(0, 0%, 0%, 0.7);
  border-bottom: 0.1vh solid hsla(0, 0%, 100%, 0.2);
  border-right: 0.1vh solid hsla(0, 0%, 100%, 0.2);
  border-top: 0.1vh solid hsla(0, 0%, 0%, 0.5);
  border-left: 0.1vh solid hsla(0, 0%, 0%, 0.5);
}

.glass2 {
  background-image: linear-gradient(315deg, hsla(182, 100%, 50%, 0.50), hsla(0, 0%, 0%, 0.9));
  border-radius: var(--space2);
  box-shadow: 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  border-bottom: 0.1vh solid hsla(0, 0%, 100%, 0.3);
  border-right: 0.1vh solid hsla(0, 0%, 100%, 0.3);
  border-top: 0.1vh solid hsla(0, 0%, 0%, 1);
  border-left: 0.1vh solid hsla(0, 0%, 0%, 1);
}

.redLightBox{
  border: 0.5vh solid hsl(0, 100%, 50%);
  background-color: hsla(0, 100%, 50%, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh rgb(255, 0, 0), 0 0 3vh rgb(139, 0, 0), 3vh 3vh 3vh black;
  transition: all 1s ease;
}

.greenLightBox {
  border: 0.5vh solid rgb(122, 255, 222);
  background-color: rgba(122, 255, 222, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh rgba(122, 255, 222), 0 0 3vh rgb(0, 134, 101), 3vh 3vh 3vh black;
  transition: all 1s ease;
}

.greenLightText {
  text-shadow: 0 0 2vh rgba(122, 255, 222), 0 0 3vh rgb(0, 136, 102), 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  color: rgba(122, 255, 222);
}

.yellowLightText {
  text-shadow: 0 0 0.1vh rgb(255, 255, 255), 0 0 2vh rgb(255, 255, 0), 0 0 1vh rgb(131, 131, 0), 1vh 1vh 1vh black, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
}

.redLightText {
  text-shadow: 0 0 2vh rgb(255, 122, 122), 0 0 3vh rgb(136, 0, 0), 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  color: rgb(255, 0, 0);
  transition: all 1s ease;
}
.greenLightTextHover:hover {
  text-shadow: 0 0 2vh rgba(122, 255, 222), 0 0 3vh rgb(0, 136, 102), 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  color: rgb(0, 248, 186);
}

.greenLightTextHover {
  transition: all 1s ease;
}
.redLightTextHover:hover {
  text-shadow: 0 0 2vh rgb(255, 122, 122), 0 0 3vh rgb(136, 0, 0), 5vh 5vh 5vh hsl(0, 0%, 0%, 0.9);
  color: rgb(255, 0, 0);

}

.redLightTextHover {
  transition: all 1s ease;
}

/*Hovers*/

.glassHover:hover {
  border: 0.5vh solid hsl(214, 100%, 74%, 0.8);
  background-color: hsl(240, 100%, 50%, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh blue, 0 0 3vh darkblue, 3vh 3vh 3vh black, 0 0 1vh;
  transform: scale(1.1);
}

.glassHover {
  transition: all 0.5s ease;
}

/*Game Efects*/

.choice {
  border: 0.5vh solid hsl(214, 100%, 74%, 0.8);
  background-color: hsl(240, 100%, 50%, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh blue, 0 0 3vh darkblue, 3vh 3vh 3vh black;
  transition: all 1s ease;
}

@keyframes shadowTextEfect {
  100% {
  text-shadow: 0 0 2vh blue, 0 0 3vh darkblue, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
  color: rgb(196, 212, 255);
  }
}

@keyframes moneyMove {
  0% {
transform: translateY(0);
  }

  49.99% {
    transform: translateY(150%);
  }

  50% {
    transform: translateY(-150%);
  }

  100% {
    transform: translateY(0);
  }
}

.moneyMove {
  animation: moneyMove 1s ease 0s;
}

@keyframes previousStatusDivChildSlide {

  0% {
    transform: translateX(120%);
  }

  100% {
    transform: translateX(-350%);
  }
} 

@keyframes acceptedCardRight {

  0% {
    z-index: 2;
    transform: scale(1.1);
  }
  50% {
    transform: translate(calc(calc(-50%*1.2) - 2vh)) scale(1.2);
  }
  100% {
    transform: translate(0) scale(1);
    z-index: 0;
  }
}

.acceptedCardRight {
  animation-name: acceptedCardRight;
  animation-duration:  2s;
  animation-timing-function:  ease;
}

@keyframes rejectedCardRight {
  
  0% {
    z-index: -3;
    transform: scale(1.1) perspective(4cm);
  }

  25% {
   transform: translate(calc(calc(-50%*1.2) - 5vh)) scale(0.8);
  }

  50% {
    transform: translate(0%) scale(1.2) rotateY(-360deg);
  }

  75% {
   transform: scale(1);
  }

  100%{
    transform: scale(1) rotateY(-360deg);
    z-index: 0;
  }

}

.rejectedCardRight {
  animation-name: rejectedCardRight;
  animation-duration:  4s;
  animation-timing-function:  ease;
}

@keyframes acceptedCardLeft {

  0% {
    z-index: 2;
    transform: scale(1.1);
  }
  50% {
    transform: translate(calc(calc(50%*1.2) + 2vh)) scale(1.2);
  }

  100% {
    transform: translate(0) scale(1);
    z-index: 0;
  }
}
.acceptedCardLeft {
  animation-name: acceptedCardLeft;
  animation-duration:  2s;
  animation-timing-function:  ease;
}


@keyframes rejectedCardLeft {
    
  0% {
    z-index: -3;
    transform: scale(1.1) perspective(4cm);
  }

  25% {
   transform: translate(calc(calc(50%*1.2) + 5vh)) scale(0.8);
  }

  50% {
    transform: translate(0%) scale(1.2) rotateY(360deg);
  }

  75% {
   transform: scale(1);
  }

  100%{
    transform: scale(1) rotateY(360deg);
    z-index: 0;
  }
}

.rejectedCardLeft {
  animation-name: rejectedCardLeft;
  animation-duration:  4s;
  animation-timing-function:  ease;
}

.correctChoice {
  border: 0.5vh solid rgb(0, 255, 191);
  background-color: rgb(0, 255, 170, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh rgb(0, 255, 191), 0 0 3vh rgb(0, 139, 127), 3vh 3vh 3vh black, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
  transition: all 0.5s ease;
}

.wrongChoice {
  border: 0.5vh solid rgb(255, 0, 0);
  background-color: hsl(0, 100%, 50%, 0.4);
  box-shadow: 0 0 0.1vh rgb(0, 0, 0), 0 0 2vh rgb(255, 0, 0), 0 0 3vh rgb(139, 0, 0), 3vh 3vh 3vh black, 0 0 1vh var(--corFundo), 0 0 1vh var(--corFundo);
  transition: all 0.5s ease;
}

.cancelEvent{
  pointer-events: none;
 }
 
.disableElement {
  display: none;
  visibility: hidden;
}

.textScaleUp1 {
  scale: 4;
  transition: all 0.25s ease;
}

.textScaleUp2 {
  scale: 1.5;
  transition: all 0.25s ease;
}

.textScaleDown {
  scale: 1;
  transition: all 0.25s ease;
}

/*Efects*/


.hiddenInformation {
  font-size: 2vh;
  padding: 1vh;
}

.informationButtonSet {
  font-size: 3vh;
  margin: 1vh auto 0 auto;
  padding: 1vh;
}



  /*Media*/

@media (orientation: portrait) {

}

